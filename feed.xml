<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://hubentu.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://hubentu.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-09-30T15:54:51+00:00</updated><id>https://hubentu.github.io/feed.xml</id><title type="html">blank</title><subtitle>Qiang&apos;s personal website. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Question-Answering Engine with CrewAI and SearXNG</title><link href="https://hubentu.github.io/blog/2024/QA-SearXNG/" rel="alternate" type="text/html" title="Question-Answering Engine with CrewAI and SearXNG"/><published>2024-03-28T00:00:00+00:00</published><updated>2024-03-28T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2024/QA-SearXNG</id><content type="html" xml:base="https://hubentu.github.io/blog/2024/QA-SearXNG/"><![CDATA[<p>In the rapidly evolving field of AI and information retrieval, the quest for a more intelligent, efficient, and customizable question-answering system is never-ending. The integration of CrewAI, a platform for creating AI agents with specific roles and capabilities, with SearXNG, a privacy-respecting meta search engine, opens new avenues for developing such systems. This blog post delves into how to leverage these technologies to create a customized question-answer engine capable of searching topics from a meta search engine and summarizing the findings into a cohesive article.</p> <h2 id="setting-the-stage-with-searxng">Setting the Stage with SearXNG</h2> <p>SearXNG stands as a pivotal component in this setup, serving as the meta search engine. It is free. The initial step involves launching SearXNG using Docker, ensuring it’s configured to output results in JSON format for easy parsing and integration. This step is crucial for enabling the seamless flow of information between the search engine and the AI agents responsible for processing the search queries and generating summaries.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker run <span class="nt">--rm</span> <span class="se">\</span>
             <span class="nt">-d</span> <span class="nt">-p</span> 8080:8080 <span class="se">\</span>
             <span class="nt">-v</span> <span class="s2">"</span><span class="k">${</span><span class="nv">PWD</span><span class="k">}</span><span class="s2">/searxng:/etc/searxng"</span> <span class="se">\</span>
             <span class="nt">-e</span> <span class="s2">"BASE_URL=http://localhost:</span><span class="nv">$PORT</span><span class="s2">/"</span> <span class="se">\</span>
             <span class="nt">-e</span> <span class="s2">"INSTANCE_NAME=my-instance"</span> <span class="se">\</span>
             searxng/searxng
</code></pre></div></div> <p>Add <code class="language-plaintext highlighter-rouge">json</code> output format to <code class="language-plaintext highlighter-rouge">searxng/settings.yml</code>.</p> <h2 id="customizing-the-ai-with-crewai">Customizing the AI with CrewAI</h2> <p>CrewAI introduces a revolutionary approach to building AI systems, allowing for the creation of specialized agents with distinct roles, goals, and capabilities. In this scenario, two types of agents are crafted: the Senior Researcher and the Writer. The Senior Researcher is designed to delve deep into the chosen topics, leveraging the SearXNG search tool to uncover relevant information and groundbreaking technologies. The Writer, on the other hand, focuses on narrating compelling scientific reports or articles based on the information gathered by the researcher.</p> <p>The demo is modified from the <a href="https://docs.crewai.com/how-to/Creating-a-Crew-and-kick-it-off/">Getting Started</a> example from <code class="language-plaintext highlighter-rouge">crewai</code>.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pprint</span>
<span class="kn">from</span> <span class="n">langchain_community.utilities</span> <span class="kn">import</span> <span class="n">SearxSearchWrapper</span>
<span class="kn">import</span> <span class="n">os</span>
<span class="kn">from</span> <span class="n">crewai</span> <span class="kn">import</span> <span class="n">Agent</span>
<span class="kn">from</span> <span class="n">langchain.agents</span> <span class="kn">import</span> <span class="n">Tool</span>
<span class="kn">from</span> <span class="n">langchain_google_genai</span> <span class="kn">import</span> <span class="n">GoogleGenerativeAI</span>
<span class="kn">from</span> <span class="n">crewai</span> <span class="kn">import</span> <span class="n">Crew</span><span class="p">,</span> <span class="n">Process</span>
<span class="kn">from</span> <span class="n">crewai</span> <span class="kn">import</span> <span class="n">Task</span>


<span class="n">search</span> <span class="o">=</span> <span class="nc">SearxSearchWrapper</span><span class="p">(</span><span class="n">searx_host</span><span class="o">=</span><span class="sh">"</span><span class="s">http://localhost:8080</span><span class="sh">"</span><span class="p">)</span>
<span class="c1">## res = search.results("What is the scRNASeq?", num_results = 10, engines=["google scholar", "arxiv"])                                                                                                           
</span>
<span class="n">search_tool</span> <span class="o">=</span> <span class="nc">Tool</span><span class="p">(</span>
    <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">search ng</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">description</span><span class="o">=</span><span class="sh">"</span><span class="s">Search the internet(search_query: </span><span class="sh">'</span><span class="s">string</span><span class="sh">'</span><span class="s">)</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">func</span><span class="o">=</span><span class="n">search</span><span class="p">.</span><span class="n">run</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">api_key</span> <span class="o">=</span> <span class="sh">""</span>
<span class="n">model</span> <span class="o">=</span> <span class="nc">GoogleGenerativeAI</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">gemini-pro</span><span class="sh">"</span><span class="p">,</span> <span class="n">temperature</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">google_api_key</span><span class="o">=</span><span class="n">api_key</span><span class="p">)</span>


<span class="c1"># Creating a senior researcher agent with memory and verbose mode                                                                                                                                                  
</span><span class="n">researcher</span> <span class="o">=</span> <span class="nc">Agent</span><span class="p">(</span>
    <span class="n">role</span><span class="o">=</span><span class="sh">'</span><span class="s">Senior Researcher</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">goal</span><span class="o">=</span><span class="sh">'</span><span class="s">Uncover groundbreaking technologies in {topic}</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">memory</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">backstory</span><span class="o">=</span><span class="p">(</span>
        <span class="sh">"</span><span class="s">Driven by curiosity, you</span><span class="sh">'</span><span class="s">re at the forefront of </span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">innovation, eager to explore and share knowledge that could change </span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">the world.</span><span class="sh">"</span>
    <span class="p">),</span>
    <span class="n">allow_delegation</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">llm</span><span class="o">=</span><span class="n">model</span><span class="p">,</span>
    <span class="n">tools</span><span class="o">=</span><span class="p">[</span><span class="n">search_tool</span><span class="p">]</span>
<span class="p">)</span>

<span class="c1"># Creating a writer agent with custom tools and delegation capability                                                                                                                                              
</span><span class="n">writer</span> <span class="o">=</span> <span class="nc">Agent</span><span class="p">(</span>
    <span class="n">role</span><span class="o">=</span><span class="sh">'</span><span class="s">Writer</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">goal</span><span class="o">=</span><span class="sh">'</span><span class="s">Narrate compelling scientific reports about {topic}</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">memory</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">backstory</span><span class="o">=</span><span class="p">(</span>
        <span class="sh">"</span><span class="s">With a flair for simplifying complex topics, you craft </span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">engaging narratives that captivate and educate, bringing new </span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">discoveries to light in an accessible manner.</span><span class="sh">"</span>
    <span class="p">),</span>
    <span class="n">tools</span><span class="o">=</span><span class="p">[</span><span class="n">search_tool</span><span class="p">],</span>
    <span class="n">allow_delegation</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">llm</span><span class="o">=</span><span class="n">model</span>
<span class="p">)</span>
<span class="c1"># Research task                                                                                                                                                                                                    
</span><span class="n">research_task</span> <span class="o">=</span> <span class="nc">Task</span><span class="p">(</span>
    <span class="n">description</span><span class="o">=</span><span class="p">(</span>
        <span class="sh">"</span><span class="s">Identify the next big trend in {topic}.</span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">Its research hot topics and potential applications</span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">Focus on identifying opportunities and challenges and the overall narrative.</span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">Your final report should clearly articulate the key points</span><span class="sh">"</span>
    <span class="p">),</span>
    <span class="n">expected_output</span><span class="o">=</span><span class="sh">'</span><span class="s">A comprehensive 3 paragraphs long report on the {topic}.</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">tools</span><span class="o">=</span><span class="p">[</span><span class="n">search_tool</span><span class="p">],</span>
    <span class="n">agent</span><span class="o">=</span><span class="n">researcher</span><span class="p">,</span>
    <span class="n">llm</span><span class="o">=</span><span class="n">model</span>
<span class="p">)</span>

<span class="c1"># Writing task with language model configuration                                                                                                                                                                   
</span><span class="n">write_task</span> <span class="o">=</span> <span class="nc">Task</span><span class="p">(</span>
    <span class="n">description</span><span class="o">=</span><span class="p">(</span>
        <span class="sh">"</span><span class="s">Compose an insightful article on {topic}.</span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">Focus on the latest trends and how it</span><span class="sh">'</span><span class="s">s impacting the area.</span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">This article should be easy to understand, engaging, and positive.</span><span class="sh">"</span>
        <span class="sh">"</span><span class="s">Add link references if cited.</span><span class="sh">"</span>
    <span class="p">),</span>
    <span class="n">expected_output</span><span class="o">=</span><span class="sh">'</span><span class="s">A 4 paragraph article on {topic} advancements formatted as markdown.</span><span class="sh">'</span><span class="p">,</span>
    <span class="n">tools</span><span class="o">=</span><span class="p">[</span><span class="n">search_tool</span><span class="p">],</span>
    <span class="n">agent</span><span class="o">=</span><span class="n">writer</span><span class="p">,</span>
    <span class="n">async_execution</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">llm</span><span class="o">=</span><span class="n">model</span><span class="p">,</span>
    <span class="n">output_file</span><span class="o">=</span><span class="sh">'</span><span class="s">new-blog-post.md</span><span class="sh">'</span>
<span class="p">)</span>

<span class="c1"># Forming the tech-focused crew with enhanced configurations                                                                                                                                                      
</span><span class="n">crew</span> <span class="o">=</span> <span class="nc">Crew</span><span class="p">(</span>
  <span class="n">agents</span><span class="o">=</span><span class="p">[</span><span class="n">researcher</span><span class="p">,</span> <span class="n">writer</span><span class="p">],</span>
  <span class="n">tasks</span><span class="o">=</span><span class="p">[</span><span class="n">research_task</span><span class="p">,</span> <span class="n">write_task</span><span class="p">],</span>
  <span class="n">process</span><span class="o">=</span><span class="n">Process</span><span class="p">.</span><span class="n">sequential</span>
<span class="p">)</span>

<span class="c1"># Starting the task execution process with enhanced feedback                                                                                                                                                      
</span><span class="n">result</span> <span class="o">=</span> <span class="n">crew</span><span class="p">.</span><span class="nf">kickoff</span><span class="p">(</span><span class="n">inputs</span><span class="o">=</span><span class="p">{</span><span class="sh">'</span><span class="s">topic</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">scRNASeq in Cancer reseach</span><span class="sh">'</span><span class="p">})</span>
<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div> <p><strong>scRNA-Seq: Revolutionizing Cancer Research with Novel Insights</strong></p> <p>Single-cell RNA sequencing (scRNA-Seq) has emerged as a transformative technology in cancer research, unveiling previously hidden cellular complexities within tumors. It empowers scientists to study individual cells, providing a comprehensive understanding of tumor heterogeneity. This granular approach has led to groundbreaking discoveries in cancer stem cell identification and characterization, as well as the intricate interactions within the tumor microenvironment.</p> <p><strong>Unlocking Therapeutic Potential</strong></p> <p>scRNA-Seq’s ability to identify and characterize cancer stem cells holds immense therapeutic potential. These cells, responsible for tumor initiation and progression, can now be targeted with precision. By understanding their unique gene expression profiles, researchers can develop therapies that specifically eliminate cancer stem cells, preventing tumor recurrence. Additionally, scRNA-Seq sheds light on the tumor microenvironment, the ecosystem surrounding cancer cells that influences tumor growth and metastasis. By dissecting the complex interplay between immune cells, stromal cells, and blood vessels, researchers can design immunotherapies that effectively harness the body’s own defenses against cancer.</p> <p><strong>Challenges and Future Directions</strong></p> <p>While scRNA-Seq offers unprecedented opportunities, challenges remain. The high cost of experiments and the computational complexity of data analysis hinder its widespread adoption. However, as technology advances and costs decrease, scRNA-Seq will become more accessible, democratizing its use in cancer research. The future holds exciting prospects for scRNA-Seq, with potential applications in personalized medicine, therapy selection, and the development of novel cancer treatments. Its continued evolution promises to revolutionize cancer research, leading to improved patient outcomes and a deeper understanding of this complex disease.</p>]]></content><author><name>Qiang; ChatGPT</name></author><category term="NLP"/><category term="LLM,"/><category term="RAG,"/><category term="Search"/><summary type="html"><![CDATA[Building a Cutting-edge Question-Answering Engine with CrewAI and SearXNG]]></summary></entry><entry><title type="html">RAG with langchain and free google gemini</title><link href="https://hubentu.github.io/blog/2024/RAG-gemini/" rel="alternate" type="text/html" title="RAG with langchain and free google gemini"/><published>2024-03-26T00:00:00+00:00</published><updated>2024-03-26T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2024/RAG-gemini</id><content type="html" xml:base="https://hubentu.github.io/blog/2024/RAG-gemini/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Combined with Langchain and Google’s free Gemini API, this blog post explores how to harness these technologies together to create a powerful document retrieval and summarization system. <em>Autogen</em> is another solution but doesn’t work with free google GenrativeAI yet.</p> <p>Briefly understand the core technologies involved:</p> <ul> <li> <p>Langchain: An open-source library designed to facilitate the building of chains of language models for various applications, including question answering and document retrieval.</p> </li> <li> <p>Gemini: Google Generative AI and Google Generative AI Embeddings. Part of Google’s suite of AI tools. It is free for 60 requests per minute.</p> </li> <li> <p>Chroma: An essential component that allows for efficient storage and retrieval of vector embeddings, making it possible to perform similarity searches across large document sets.</p> </li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">langchain_google_genai</span> <span class="kn">import</span> <span class="n">GoogleGenerativeAI</span><span class="p">,</span> <span class="n">GoogleGenerativeAIEmbeddings</span>
<span class="kn">from</span> <span class="n">langchain_community.document_loaders</span> <span class="kn">import</span> <span class="n">UnstructuredFileLoader</span>
<span class="kn">from</span> <span class="n">langchain_community.document_loaders</span> <span class="kn">import</span> <span class="n">DirectoryLoader</span>
<span class="kn">from</span> <span class="n">langchain.prompts</span> <span class="kn">import</span> <span class="n">PromptTemplate</span>
<span class="kn">from</span> <span class="n">langchain.chains.question_answering</span> <span class="kn">import</span> <span class="n">load_qa_chain</span>
<span class="kn">from</span> <span class="n">langchain.text_splitter</span> <span class="kn">import</span> <span class="n">RecursiveCharacterTextSplitter</span>
<span class="kn">from</span> <span class="n">langchain.vectorstores</span> <span class="kn">import</span> <span class="n">Chroma</span>

<span class="n">api_key</span> <span class="o">=</span> <span class="sh">"</span><span class="s">YOUR googleai studio KEY</span><span class="sh">"</span>
<span class="n">embeddings</span> <span class="o">=</span> <span class="nc">GoogleGenerativeAIEmbeddings</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">models/embedding-001</span><span class="sh">"</span><span class="p">,</span> <span class="n">google_api_key</span><span class="o">=</span><span class="n">api_key</span><span class="p">)</span>
<span class="n">model</span> <span class="o">=</span> <span class="nc">GoogleGenerativeAI</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">gemini-pro</span><span class="sh">"</span><span class="p">,</span> <span class="n">temperature</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">google_api_key</span><span class="o">=</span><span class="n">api_key</span><span class="p">)</span>

<span class="c1">## index documents                                                                                                                                                                                                
</span><span class="n">loader</span> <span class="o">=</span> <span class="nc">DirectoryLoader</span><span class="p">(</span><span class="sh">"</span><span class="s">/home/Documents/</span><span class="sh">"</span><span class="p">)</span>                                                                                                                                                           
<span class="n">docs</span> <span class="o">=</span> <span class="n">loader</span><span class="p">.</span><span class="nf">load</span><span class="p">()</span>                                                                                                                                                                                             
<span class="n">text_splitter</span> <span class="o">=</span> <span class="nc">RecursiveCharacterTextSplitter</span><span class="p">(</span><span class="n">chunk_size</span><span class="o">=</span><span class="mi">10000</span><span class="p">,</span> <span class="n">chunk_overlap</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>                                                                                                                              
<span class="n">texts</span> <span class="o">=</span> <span class="n">text_splitter</span><span class="p">.</span><span class="nf">split_documents</span><span class="p">(</span><span class="n">docs</span><span class="p">)</span>                                                                                                                                                                      
<span class="n">db</span> <span class="o">=</span> <span class="n">Chroma</span><span class="p">.</span><span class="nf">from_documents</span><span class="p">(</span><span class="n">documents</span><span class="o">=</span><span class="n">texts</span><span class="p">,</span> <span class="n">embedding</span><span class="o">=</span><span class="n">embeddings</span><span class="p">,</span>                                                                                                                                       
                           <span class="n">persist_directory</span><span class="o">=</span><span class="sh">"</span><span class="s">./chroma_db</span><span class="sh">"</span><span class="p">)</span>                                                                                                                                             

<span class="c1">## load db
</span><span class="n">db</span> <span class="o">=</span> <span class="nc">Chroma</span><span class="p">(</span><span class="n">persist_directory</span><span class="o">=</span><span class="sh">"</span><span class="s">./chroma_db</span><span class="sh">"</span><span class="p">,</span> <span class="n">embedding_function</span><span class="o">=</span><span class="n">embeddings</span><span class="p">)</span>

<span class="n">qa</span> <span class="o">=</span> <span class="sh">"</span><span class="s">summarize [the topic] in papers</span><span class="sh">"</span>
<span class="n">keys</span> <span class="o">=</span> <span class="n">qa</span>
<span class="n">retrieved_docs</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nf">similarity_search</span><span class="p">(</span><span class="n">keys</span><span class="p">,</span> <span class="n">k</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="n">prompt_template</span> <span class="o">=</span> <span class="sh">"""</span><span class="s">                                                                                                                                                                                             
Answer the question as detailed as possible from the provided context,                                                                                                                                            
make sure to provide all the details, if the answer is not in                                                                                                                                                     
provided context just say, </span><span class="sh">"</span><span class="s">answer is not available in the context</span><span class="sh">"</span><span class="s">,                                                                                                                                              
don</span><span class="sh">'</span><span class="s">t provide the wrong answer</span><span class="se">\n\n</span><span class="s">                                                                                                                                                                                
Context:</span><span class="se">\n</span><span class="s"> {context}?</span><span class="se">\n</span><span class="s">                                                                                                                                                                                           
Question: </span><span class="se">\n</span><span class="s">{question}</span><span class="se">\n</span><span class="s">                                                                                                                                                                                          
Answer:                                                                                                                                                                                                           
</span><span class="sh">"""</span>

<span class="c1"># Create Prompt
</span><span class="n">prompt</span> <span class="o">=</span> <span class="nc">PromptTemplate</span><span class="p">(</span><span class="n">template</span><span class="o">=</span><span class="n">prompt_template</span><span class="p">,</span> <span class="n">input_variables</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">context</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">question</span><span class="sh">'</span><span class="p">])</span>

<span class="c1"># Load QA Chain
</span><span class="n">chain</span> <span class="o">=</span> <span class="nf">load_qa_chain</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">chain_type</span><span class="o">=</span><span class="sh">"</span><span class="s">stuff</span><span class="sh">"</span><span class="p">,</span> <span class="n">prompt</span><span class="o">=</span><span class="n">prompt</span><span class="p">)</span>

<span class="c1"># Get Response
</span><span class="n">response</span> <span class="o">=</span> <span class="nf">chain</span><span class="p">({</span><span class="sh">"</span><span class="s">input_documents</span><span class="sh">"</span><span class="p">:</span> <span class="n">retrieved_docs</span><span class="p">,</span> <span class="sh">"</span><span class="s">question</span><span class="sh">"</span><span class="p">:</span> <span class="n">qa</span><span class="p">},</span> <span class="n">return_only_outputs</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">response</span><span class="p">[</span><span class="sh">'</span><span class="s">output_text</span><span class="sh">'</span><span class="p">])</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="NLP"/><category term="LLM,"/><category term="RAG"/><summary type="html"><![CDATA[Unleashing the Power of RAG with Langchain and Google's Free Gemini]]></summary></entry><entry><title type="html">Retrieval augmented generation</title><link href="https://hubentu.github.io/blog/2023/RAG/" rel="alternate" type="text/html" title="Retrieval augmented generation"/><published>2023-11-22T00:00:00+00:00</published><updated>2023-11-22T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2023/RAG</id><content type="html" xml:base="https://hubentu.github.io/blog/2023/RAG/"><![CDATA[<h1 id="retrieval-augmented-generation-rag">Retrieval augmented generation (RAG)</h1> <p><a href="https://huggingface.co/docs/transformers/model_doc/rag">https://huggingface.co/docs/transformers/model_doc/rag</a></p> <blockquote> <p>Retrieval-augmented generation (RAG) is a technique that combines pre-trained dense retrieval (DPR) and sequence-to-sequence models. RAG models retrieve documents, pass them to a seq2seq model, then marginalize to generate outputs.</p> </blockquote> <h2 id="rag-with-mistral-by-ollama">RAG with <strong>mistral</strong> by Ollama</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">langchain_community.llms</span> <span class="kn">import</span> <span class="n">Ollama</span>
<span class="kn">from</span> <span class="n">langchain.text_splitter</span> <span class="kn">import</span> <span class="n">RecursiveCharacterTextSplitter</span>
<span class="kn">from</span> <span class="n">langchain_community.document_loaders</span> <span class="kn">import</span> <span class="n">WebBaseLoader</span>
<span class="kn">from</span> <span class="n">langchain_community.embeddings</span> <span class="kn">import</span> <span class="n">OllamaEmbeddings</span>
<span class="kn">from</span> <span class="n">langchain_community.vectorstores</span> <span class="kn">import</span> <span class="n">Chroma</span>
<span class="kn">from</span> <span class="n">langchain</span> <span class="kn">import</span> <span class="n">hub</span>
<span class="kn">from</span> <span class="n">langchain.chains.question_answering</span> <span class="kn">import</span> <span class="n">load_qa_chain</span>

<span class="n">loader</span> <span class="o">=</span> <span class="nc">WebBaseLoader</span><span class="p">(</span><span class="sh">"</span><span class="s">https://lilianweng.github.io/posts/2023-06-23-agent/</span><span class="sh">"</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">loader</span><span class="p">.</span><span class="nf">load</span><span class="p">()</span>

<span class="n">text_splitter</span> <span class="o">=</span> <span class="nc">RecursiveCharacterTextSplitter</span><span class="p">(</span><span class="n">chunk_size</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span> <span class="n">chunk_overlap</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">all_splits</span> <span class="o">=</span> <span class="n">text_splitter</span><span class="p">.</span><span class="nf">split_documents</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="n">vectorstore</span> <span class="o">=</span> <span class="n">Chroma</span><span class="p">.</span><span class="nf">from_documents</span><span class="p">(</span><span class="n">documents</span><span class="o">=</span><span class="n">all_splits</span><span class="p">,</span> <span class="n">embedding</span><span class="o">=</span><span class="nc">OllamaEmbeddings</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">mistral</span><span class="sh">"</span><span class="p">))</span>

<span class="n">question</span> <span class="o">=</span> <span class="sh">"</span><span class="s">What are the approaches to Task Decomposition?</span><span class="sh">"</span>
<span class="n">docs</span> <span class="o">=</span> <span class="n">vectorstore</span><span class="p">.</span><span class="nf">similarity_search</span><span class="p">(</span><span class="n">question</span><span class="p">)</span>
<span class="nf">len</span><span class="p">(</span><span class="n">docs</span><span class="p">)</span>
<span class="err">￼</span>
<span class="n">llm</span> <span class="o">=</span> <span class="nc">Ollama</span><span class="p">(</span><span class="n">model</span><span class="o">=</span><span class="sh">"</span><span class="s">mistral</span><span class="sh">"</span><span class="p">)</span>

<span class="nf">llm</span><span class="p">(</span><span class="n">question</span><span class="p">)</span>

<span class="n">rag_prompt</span> <span class="o">=</span> <span class="n">hub</span><span class="p">.</span><span class="nf">pull</span><span class="p">(</span><span class="sh">"</span><span class="s">rlm/rag-prompt-mistral</span><span class="sh">"</span><span class="p">)</span>
<span class="n">rag_prompt</span><span class="p">.</span><span class="n">messages</span>

<span class="n">chain</span> <span class="o">=</span> <span class="nf">load_qa_chain</span><span class="p">(</span><span class="n">llm</span><span class="p">,</span> <span class="n">chain_type</span><span class="o">=</span><span class="sh">"</span><span class="s">stuff</span><span class="sh">"</span><span class="p">,</span> <span class="n">prompt</span><span class="o">=</span><span class="n">rag_prompt</span><span class="p">)</span>
<span class="nf">chain</span><span class="p">({</span><span class="sh">"</span><span class="s">input_documents</span><span class="sh">"</span><span class="p">:</span> <span class="n">docs</span><span class="p">,</span> <span class="sh">"</span><span class="s">question</span><span class="sh">"</span><span class="p">:</span> <span class="n">question</span><span class="p">},</span> <span class="n">return_only_outputs</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

</code></pre></div></div> <blockquote> <p>Task Decomposition approaches involve breaking down complex tasks into smaller, manageable sub-tasks that can be handled independently. This method allows for more efficient processing and better handling of dependencies between tasks. Common approaches include top-down decomposition, bottom-up decomposition, and sequential decomposition. Top-down starts with the overall goal and breaks it down into increasingly specific sub-tasks, while bottom-up begins with the basic components and builds up to the complete task. Sequential decomposition handles tasks in a linear fashion, one after another. (Refer to “Artificial Intelligence: A Modern Approach” by Russell &amp; Norvig for more detailed information.)</p> </blockquote> <h2 id="rag-with-microsoftorca-2-13b">RAG with <strong>microsoft/Orca-2-13b</strong></h2> <p>The task is to ask question based on a blog article. First, we load the article to <code class="language-plaintext highlighter-rouge">Chroma</code> vector database.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">langchain.document_loaders</span> <span class="kn">import</span> <span class="n">WebBaseLoader</span>
<span class="kn">from</span> <span class="n">langchain.text_splitter</span> <span class="kn">import</span> <span class="n">RecursiveCharacterTextSplitter</span>
<span class="kn">from</span> <span class="n">langchain.embeddings.sentence_transformer</span> <span class="kn">import</span> <span class="n">SentenceTransformerEmbeddings</span>
<span class="kn">from</span> <span class="n">langchain.vectorstores</span> <span class="kn">import</span> <span class="n">Chroma</span>
<span class="kn">from</span> <span class="n">langchain.llms</span> <span class="kn">import</span> <span class="n">HuggingFacePipeline</span>
<span class="kn">from</span> <span class="n">langchain</span> <span class="kn">import</span> <span class="n">hub</span>
<span class="kn">from</span> <span class="n">langchain.chains.question_answering</span> <span class="kn">import</span> <span class="n">load_qa_chain</span>
<span class="kn">from</span> <span class="n">transformers</span> <span class="kn">import</span> <span class="n">AutoModelForCausalLM</span><span class="p">,</span> <span class="n">AutoTokenizer</span><span class="p">,</span> <span class="n">pipeline</span>

<span class="n">loader</span> <span class="o">=</span> <span class="nc">WebBaseLoader</span><span class="p">(</span><span class="sh">"</span><span class="s">https://lilianweng.github.io/posts/2023-03-15-prompt-engineering/</span><span class="sh">"</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">loader</span><span class="p">.</span><span class="nf">load</span><span class="p">()</span>

<span class="n">text_splitter</span> <span class="o">=</span> <span class="nc">RecursiveCharacterTextSplitter</span><span class="p">(</span><span class="n">chunk_size</span><span class="o">=</span><span class="mi">500</span><span class="p">,</span> <span class="n">chunk_overlap</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">all_splits</span> <span class="o">=</span> <span class="n">text_splitter</span><span class="p">.</span><span class="nf">split_documents</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="n">ef</span> <span class="o">=</span> <span class="nc">SentenceTransformerEmbeddings</span><span class="p">(</span><span class="n">model_name</span><span class="o">=</span><span class="sh">"</span><span class="s">all-MiniLM-L6-v2</span><span class="sh">"</span><span class="p">)</span>
<span class="n">db</span> <span class="o">=</span> <span class="n">Chroma</span><span class="p">.</span><span class="nf">from_documents</span><span class="p">(</span><span class="n">all_splits</span><span class="p">,</span> <span class="n">ef</span><span class="p">,</span> <span class="n">persist_directory</span><span class="o">=</span><span class="sh">"</span><span class="s">./chroma_db</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <p>Then we build a <code class="language-plaintext highlighter-rouge">text-generation</code> pipleline.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">question</span> <span class="o">=</span> <span class="sh">"</span><span class="s">What is Instruction Prompting?</span><span class="sh">"</span>
<span class="n">docs</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nf">similarity_search</span><span class="p">(</span><span class="n">question</span><span class="p">,</span> <span class="n">k</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

<span class="n">model_id</span> <span class="o">=</span> <span class="sh">"</span><span class="s">microsoft/Orca-2-13b</span><span class="sh">"</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AutoModelForCausalLM</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">device_map</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span>
                                             <span class="n">torch_dtype</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">tokenizer</span> <span class="o">=</span> <span class="n">AutoTokenizer</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">pipe</span> <span class="o">=</span> <span class="nf">pipeline</span><span class="p">(</span><span class="sh">"</span><span class="s">text-generation</span><span class="sh">"</span><span class="p">,</span> <span class="n">model</span><span class="o">=</span><span class="n">model</span><span class="p">,</span>
                <span class="n">tokenizer</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">,</span> <span class="n">max_new_tokens</span><span class="o">=</span><span class="mi">256</span><span class="p">)</span>

<span class="n">llm</span> <span class="o">=</span> <span class="nc">HuggingFacePipeline</span><span class="p">(</span><span class="n">pipeline</span><span class="o">=</span><span class="n">pipe</span><span class="p">)</span>

<span class="c1">## 0-shot
</span><span class="nf">llm</span><span class="p">(</span><span class="n">question</span><span class="p">)</span>
</code></pre></div></div> <blockquote> <p>Instruction prompting is a method of teaching that involves providing students with clear and concise instructions to guide their learning. This approach helps students understand what is expected of them and h<br/> ow to achieve the desired learning outcomes.</p> </blockquote> <blockquote> <p>Instruction prompting can be used in various educational settings, including classrooms, online courses, and self-directed learning environments. It is particularly useful for students who may struggle with und<br/> erstanding complex instructions or who need additional support to stay on track with their learning.</p> </blockquote> <blockquote> <p>There are several key components of instruction prompting:</p> </blockquote> <blockquote> <ol> <li>Clear and concise instructions: Instruction prompting involves providing students with clear and concise instructions that outline the learning objectives, tasks, and expectations for each lesson or activity<br/> . This helps students understand what they need to do and how to do it.</li> </ol> </blockquote> <blockquote> <ol> <li>Step-by-step guidance: Instruction prompting often includes step-by-step guidance to help students break down complex tasks into smaller, more manageable steps. This can make it easier for students to follow<br/> along and complete the tasks successfully.</li> </ol> </blockquote> <blockquote> <ol> <li>Feedback and support: Instruction prompting may also involve providing students with feedback and support throughout the learning process. This can include verbal</li> </ol> </blockquote> <p>Finally, we build a RAG chain to answer the question based on input documents.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rag_prompt</span> <span class="o">=</span> <span class="n">hub</span><span class="p">.</span><span class="nf">pull</span><span class="p">(</span><span class="sh">"</span><span class="s">rlm/rag-prompt</span><span class="sh">"</span><span class="p">)</span>
<span class="n">chain</span> <span class="o">=</span> <span class="nf">load_qa_chain</span><span class="p">(</span><span class="n">llm</span><span class="p">,</span> <span class="n">chain_type</span><span class="o">=</span><span class="sh">"</span><span class="s">stuff</span><span class="sh">"</span><span class="p">,</span> <span class="n">prompt</span><span class="o">=</span><span class="n">rag_prompt</span><span class="p">)</span>
<span class="nf">chain</span><span class="p">({</span><span class="sh">"</span><span class="s">input_documents</span><span class="sh">"</span><span class="p">:</span> <span class="n">docs</span><span class="p">,</span> <span class="sh">"</span><span class="s">question</span><span class="sh">"</span><span class="p">:</span> <span class="n">question</span><span class="p">},</span> <span class="n">return_only_outputs</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div> <blockquote> <p>{‘output_text’: ‘ Instruction Prompting is a process of generating instruction candidates based on a small set of demonstrations in the form of input-output pairs.’}</p> </blockquote> <h2 id="01-aiyi-6b"><strong>01-ai/Yi-6B</strong></h2> <p>Small <em>Yi-6B</em> for 0-shot.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model_id</span> <span class="o">=</span> <span class="sh">"</span><span class="s">01-ai/Yi-6B</span><span class="sh">"</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AutoModelForCausalLM</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">device_map</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span> <span class="n">torch_dtype</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">tokenizer</span> <span class="o">=</span> <span class="n">AutoTokenizer</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">pipe</span> <span class="o">=</span> <span class="nf">pipeline</span><span class="p">(</span><span class="sh">"</span><span class="s">text-generation</span><span class="sh">"</span><span class="p">,</span> <span class="n">model</span><span class="o">=</span><span class="n">model</span><span class="p">,</span> <span class="n">tokenizer</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">,</span>
                <span class="n">max_new_tokens</span><span class="o">=</span><span class="mi">256</span><span class="p">,</span>
                <span class="n">eos_token_id</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">.</span><span class="n">eos_token_id</span><span class="p">)</span>
<span class="n">llm_yi</span> <span class="o">=</span> <span class="nc">HuggingFacePipeline</span><span class="p">(</span><span class="n">pipeline</span><span class="o">=</span><span class="n">pipe</span><span class="p">)</span>
<span class="nf">llm_yi</span><span class="p">(</span><span class="n">question</span><span class="p">)</span>
</code></pre></div></div> <blockquote> <p>Instruction prompting is a method of teaching that involves the use of prompts to guide the learner through the learning process. It is a form of scaffolding, which is a technique used to support learners in their learning process. Instruction prompting is used to help learners understand the content and to guide them through the learning process. It is used to help learners understand the content and to guide them through the learning process. It is used to help learners understand the content and to guide them through the learning process.</p> </blockquote> <blockquote> <p>How does Instruction Prompting work?</p> </blockquote> <blockquote> <p>Instruction prompting is a method of teaching that involves the use of prompts to guide the learner through the learning process. It is a form of scaffolding, which is a technique used to support learners in their learning process. Instruction prompting is used to help learners understand the content and to guide them through the learning process. It is used to help learners understand the content and to guide them t<br/> hrough the learning process. It is used to help learners understand the content and to guide them through the learning process.</p> </blockquote> <blockquote> <p>What are the benefits of Instruction Prompting?</p> </blockquote> <blockquote> <p>Instruction prompting is a method of teaching that involves the use of prompts to guide the learner through the learning process. It is a form of sc</p> </blockquote> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chain_yi</span> <span class="o">=</span> <span class="nf">load_qa_chain</span><span class="p">(</span><span class="n">llm_yi</span><span class="p">,</span> <span class="n">chain_type</span><span class="o">=</span><span class="sh">"</span><span class="s">stuff</span><span class="sh">"</span><span class="p">,</span> <span class="n">prompt</span><span class="o">=</span><span class="n">rag_prompt</span><span class="p">)</span>
<span class="nf">chain_yi</span><span class="p">({</span><span class="sh">"</span><span class="s">input_documents</span><span class="sh">"</span><span class="p">:</span> <span class="n">docs</span><span class="p">,</span>  <span class="sh">"</span><span class="s">question</span><span class="sh">"</span><span class="p">:</span> <span class="n">question</span><span class="p">},</span> <span class="n">return_only_outputs</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div> <blockquote> <p>{‘output_text’: ‘ Prompt LLM to generate instruction candidates based on a small set of demonstrations in the form of input-output pairs. E.g. \n\nThe instruction is.’}</p> </blockquote> <p>In conclusion, the <strong>microsoft/Orca-2-13b</strong> model demonstrates better performance in summarizing the relevant documents. It can extract the main points and present them in a concise and coherent way.</p>]]></content><author><name></name></author><category term="NLP"/><category term="LLM"/><summary type="html"><![CDATA[Test RAG with langchain and small LLMs.]]></summary></entry><entry><title type="html">Test popular LLM models</title><link href="https://hubentu.github.io/blog/2023/LLM-test/" rel="alternate" type="text/html" title="Test popular LLM models"/><published>2023-11-12T00:00:00+00:00</published><updated>2023-11-12T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2023/LLM-test</id><content type="html" xml:base="https://hubentu.github.io/blog/2023/LLM-test/"><![CDATA[<h1 id="local-model-from-huggingface">Local model from Huggingface</h1> <p>Several large language models (LLMs) were selected by popularity from Huggingface for test run.</p> <h2 id="nousresearchllama-2-13b-hf">NousResearch/Llama-2-13b-hf</h2> <p>Original <code class="language-plaintext highlighter-rouge">LLama2</code> request is still not aproved by meta. Here model from <code class="language-plaintext highlighter-rouge">NousResearch</code> was used.</p> <p>First, build a text-generation pipeline.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">langchain.llms.huggingface_pipeline</span> <span class="kn">import</span> <span class="n">HuggingFacePipeline</span>
<span class="kn">from</span> <span class="n">transformers</span> <span class="kn">import</span> <span class="n">AutoModelForCausalLM</span><span class="p">,</span> <span class="n">AutoTokenizer</span><span class="p">,</span> <span class="n">pipeline</span>
<span class="kn">from</span> <span class="n">langchain.prompts</span> <span class="kn">import</span> <span class="n">PromptTemplate</span>

<span class="n">model_id</span> <span class="o">=</span> <span class="sh">"</span><span class="s">NousResearch/Llama-2-13b-hf</span><span class="sh">"</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AutoModelForCausalLM</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">device_map</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span> 
                                            <span class="n">torch_dtype</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">tokenizer</span> <span class="o">=</span> <span class="n">AutoTokenizer</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">pipe</span> <span class="o">=</span> <span class="nf">pipeline</span><span class="p">(</span><span class="sh">"</span><span class="s">text-generation</span><span class="sh">"</span><span class="p">,</span> <span class="n">model</span><span class="o">=</span><span class="n">model</span><span class="p">,</span> <span class="n">tokenizer</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">,</span>
                <span class="n">max_new_tokens</span><span class="o">=</span><span class="mi">256</span><span class="p">,</span>
                <span class="n">eos_token_id</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">.</span><span class="n">eos_token_id</span><span class="p">,</span>
                <span class="n">do_sample</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
                <span class="n">repetition_penalty</span><span class="o">=</span><span class="mf">1.3</span><span class="p">,</span>
                <span class="n">no_repeat_ngram_size</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
                <span class="n">temperature</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
                <span class="n">top_k</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
                <span class="n">top_p</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
            <span class="p">)</span>
<span class="n">hf_l</span> <span class="o">=</span> <span class="nc">HuggingFacePipeline</span><span class="p">(</span><span class="n">pipeline</span><span class="o">=</span><span class="n">pipe</span><span class="p">)</span>
</code></pre></div></div> <p>Then, connect prompt with pipeline to question-answer chian using <code class="language-plaintext highlighter-rouge">langchain</code>.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">template</span> <span class="o">=</span> <span class="sh">"""</span><span class="s">You are an assistant for question-answering tasks. 
If you don</span><span class="sh">'</span><span class="s">t know the answer, just say that you don</span><span class="sh">'</span><span class="s">t know. 
Keep the answer concise.

Question: {question}                                                                                                                                                                                                   
Answer: Let</span><span class="sh">'</span><span class="s">s think step by step.</span><span class="sh">"""</span>
<span class="n">prompt</span> <span class="o">=</span> <span class="n">PromptTemplate</span><span class="p">.</span><span class="nf">from_template</span><span class="p">(</span><span class="n">template</span><span class="p">)</span>

<span class="n">chain</span> <span class="o">=</span> <span class="n">prompt</span> <span class="o">|</span> <span class="n">hf_l</span>

<span class="n">question</span> <span class="o">=</span> <span class="sh">"</span><span class="s">What is common workflow language?</span><span class="sh">"</span>
<span class="nf">print</span><span class="p">(</span><span class="n">chain</span><span class="p">.</span><span class="nf">invoke</span><span class="p">({</span><span class="sh">"</span><span class="s">question</span><span class="sh">"</span><span class="p">:</span> <span class="n">question</span><span class="p">}))</span>
</code></pre></div></div> <p>Here is the answer:</p> <blockquote> <p>Common means it can be used in multiple projects or systems. Workflow implies a sequence of steps and some kind of control flow logic (either sequential or parallel). Language would imply something with syntax like Python/Java etc… I believe this to mean BPMN which stands for business process model notation as defined here https://en.wikipedia.org/wiki/Business_Process_Model_and_Notation. It also looks very similar to UML activity diagrams but has more specific semantics around timing constraints on activities such as start times end durations etc.. The standard was developed jointly between OMG &amp; ISO so there should not really be any compatibility issues across different platforms unless they choose not implement support properly themselves e.g., IBM Blueworks vs Microsoft Visio Pro etc…. Hopefully this helps!</p> </blockquote> <p>Answer from nowhere…</p> <h2 id="01-aiyi-34b">01-ai/Yi-34B</h2> <p>The most recent LLM.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">langchain.llms.huggingface_pipeline</span> <span class="kn">import</span> <span class="n">HuggingFacePipeline</span>
<span class="kn">from</span> <span class="n">transformers</span> <span class="kn">import</span> <span class="n">AutoModelForCausalLM</span><span class="p">,</span> <span class="n">AutoTokenizer</span><span class="p">,</span> <span class="n">pipeline</span>
<span class="kn">from</span> <span class="n">langchain.prompts</span> <span class="kn">import</span> <span class="n">PromptTemplate</span>

<span class="n">model_id</span> <span class="o">=</span> <span class="sh">"</span><span class="s">01-ai/Yi-34B</span><span class="sh">"</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AutoModelForCausalLM</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">device_map</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span> 
                                            <span class="n">torch_dtype</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">tokenizer</span> <span class="o">=</span> <span class="n">AutoTokenizer</span><span class="p">.</span><span class="nf">from_pretrained</span><span class="p">(</span><span class="n">model_id</span><span class="p">,</span> <span class="n">trust_remote_code</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">pipe</span> <span class="o">=</span> <span class="nf">pipeline</span><span class="p">(</span><span class="sh">"</span><span class="s">text-generation</span><span class="sh">"</span><span class="p">,</span> <span class="n">model</span><span class="o">=</span><span class="n">model</span><span class="p">,</span> <span class="n">tokenizer</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">,</span>
                <span class="n">max_new_tokens</span><span class="o">=</span><span class="mi">256</span><span class="p">,</span>
                <span class="n">eos_token_id</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">.</span><span class="n">eos_token_id</span><span class="p">,</span>
                <span class="n">do_sample</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
                <span class="n">repetition_penalty</span><span class="o">=</span><span class="mf">1.3</span><span class="p">,</span>
                <span class="n">no_repeat_ngram_size</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
                <span class="n">temperature</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
                <span class="n">top_k</span><span class="o">=</span><span class="mi">40</span><span class="p">,</span>
                <span class="n">top_p</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
            <span class="p">)</span>
<span class="n">hf_yi</span> <span class="o">=</span> <span class="nc">HuggingFacePipeline</span><span class="p">(</span><span class="n">pipeline</span><span class="o">=</span><span class="n">pipe</span><span class="p">)</span>

<span class="n">template</span> <span class="o">=</span> <span class="sh">"""</span><span class="s">You are an assistant for question-answering tasks. 
If you don</span><span class="sh">'</span><span class="s">t know the answer, just say that you don</span><span class="sh">'</span><span class="s">t know. 
Keep the answer concise.                                                                                                                                            

Question: {question}

Answer: Let</span><span class="sh">'</span><span class="s">s think step by step.</span><span class="sh">"""</span>
<span class="n">prompt</span> <span class="o">=</span> <span class="n">PromptTemplate</span><span class="p">.</span><span class="nf">from_template</span><span class="p">(</span><span class="n">template</span><span class="p">)</span>

<span class="n">chain</span> <span class="o">=</span> <span class="n">prompt</span> <span class="o">|</span> <span class="n">hf_yi</span>
<span class="n">question</span> <span class="o">=</span> <span class="sh">"</span><span class="s">What is common workflow language?</span><span class="sh">"</span>
<span class="nf">print</span><span class="p">(</span><span class="n">chain</span><span class="p">.</span><span class="nf">invoke</span><span class="p">({</span><span class="sh">"</span><span class="s">question</span><span class="sh">"</span><span class="p">:</span> <span class="n">question</span><span class="p">}))</span>
</code></pre></div></div> <blockquote> <p>The Common Workflow Language (CWL) defines a specification and software framework to describe end-to-end analysis pipelines in bioinformatics using human readable YAML documents. Thus CWL provides tools for defining data processing parameters as well as job dependencies between steps within or across platforms such as Docker containers, Singularity images etc. So the answer is “A standard format used to define pipeline specifications”.</p> </blockquote> <p>The answer is impressively correct!</p>]]></content><author><name></name></author><category term="NLP"/><category term="LLM"/><summary type="html"><![CDATA[test run of popular LLM models]]></summary></entry><entry><title type="html">My Awsome AI resources</title><link href="https://hubentu.github.io/blog/2023/LLM/" rel="alternate" type="text/html" title="My Awsome AI resources"/><published>2023-11-11T00:00:00+00:00</published><updated>2023-11-11T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2023/LLM</id><content type="html" xml:base="https://hubentu.github.io/blog/2023/LLM/"><![CDATA[<h2 id="llm">LLM</h2> <ul> <li>Langchain <a href="https://python.langchain.com/">https://python.langchain.com/</a></li> </ul> <h2 id="image">Image</h2> <ul> <li> <p>Stable Diffusion <a href="https://stability.ai/">https://stability.ai/</a></p> </li> <li> <p>Midjourney <a href="https://midjourney.com">https://midjourney.com</a></p> </li> </ul> <h2 id="video">Video</h2> <ul> <li> <p>Pika <a href="https://pika.art/">https://pika.art/</a></p> </li> <li> <p>Runway <a href="https://runwayml.com/">https://runwayml.com/</a></p> </li> </ul> <h2 id="projects">Projects</h2> <ul> <li> <p>Huggingface <a href="https://huggingface.co/">https://huggingface.co/</a></p> </li> <li> <p>Ollama <a href="https://ollama.ai/">https://ollama.ai/</a></p> </li> <li> <p>llama.cpp <a href="https://github.com/ggerganov/llama.cpp">https://github.com/ggerganov/llama.cpp</a></p> </li> </ul>]]></content><author><name></name></author><category term="NLP"/><category term="LLM,"/><category term="links"/><summary type="html"><![CDATA[A collection of AI resources]]></summary></entry><entry><title type="html">Ncov 2019 Data Map</title><link href="https://hubentu.github.io/blog/2020/nCov-2019-data-map/" rel="alternate" type="text/html" title="Ncov 2019 Data Map"/><published>2020-01-30T00:00:00+00:00</published><updated>2020-01-30T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2020/nCov-2019-data-map</id><content type="html" xml:base="https://hubentu.github.io/blog/2020/nCov-2019-data-map/"><![CDATA[<h1 id="2019-ncov">2019-nCoV</h1> <p>Take Home:</p> <ul> <li>Download the data:</li> </ul> <p><a href="https://github.com/hutuben/hutuben.github.io/tree/master/data">/data</a></p> <ul> <li>Epidemic map by provinces</li> </ul> <p><a href="https://takehomessage.com/widgets/nCoV2019.html">/widgets/nCoV2019.html</a></p> <ul> <li>Epidemic map by cities</li> </ul> <p><a href="https://takehomessage.com/widgets/nCoV2019_cities.html">/widgets/nCoV2019_cities.html</a></p> <h2 id="2019-ncov-outbreak-data">2019-nCov outbreak data</h2> <p>Script to extract latest 2019-nCov outbreak data from <a href="https://dxy.cn">dxy.cn</a>. <strong>Manually updated (2020-03-15)</strong></p> <p>Date source: https://3g.dxy.cn/newh5/view/pneumonia</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">rvest</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">readr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">jsonlite</span><span class="p">)</span><span class="w">

</span><span class="n">pneumonia</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="s2">"https://3g.dxy.cn/newh5/view/pneumonia"</span><span class="p">)</span><span class="w">
</span><span class="n">AreaStat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pneumonia</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"#getAreaStat"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"try \\{ window.getAreaStat ="</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"\\}catch\\(e\\)\\{\\}"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">fromJSON</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">rename</span><span class="p">(</span><span class="n">confirmedCount_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">confirmedCount</span><span class="p">,</span><span class="w">
           </span><span class="n">suspectedCount_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">suspectedCount</span><span class="p">,</span><span class="w">
           </span><span class="n">curedCount_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">curedCount</span><span class="p">,</span><span class="w">
           </span><span class="n">deadCount_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">deadCount</span><span class="p">,</span><span class="w">
           </span><span class="n">locationId_s</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">locationId</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">unnest</span><span class="p">(</span><span class="n">cities</span><span class="p">,</span><span class="w"> </span><span class="n">keep_empty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">,</span><span class="w"> </span><span class="n">names_repair</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"unique"</span><span class="p">)</span><span class="w">

</span><span class="n">ChinaStat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pneumonia</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"#getListByCountryTypeService1"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"try \\{ window.getListByCountryTypeService1 ="</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"\\}catch\\(e\\)\\{\\}"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">fromJSON</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error: lexical error: invalid char in json text.
##                                        NA
##                      (right here) ------^
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">IntStat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pneumonia</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"#getListByCountryTypeService2"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"try \\{ window.getListByCountryTypeService2 ="</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"\\}catch\\(e\\)\\{\\}"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">fromJSON</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error: lexical error: invalid char in json text.
##                                        NA
##                      (right here) ------^
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SumStat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pneumonia</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"#getStatisticsService"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"try \\{ window.getStatisticsService ="</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace</span><span class="p">(</span><span class="s2">"\\}catch\\(e\\)\\{\\}"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">fromJSON</span><span class="w">

</span><span class="n">write_csv</span><span class="p">(</span><span class="n">AreaStat</span><span class="p">,</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"data/AreaStat_dxy_"</span><span class="p">,</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"[ :]"</span><span class="p">,</span><span class="w"> </span><span class="s2">"_"</span><span class="p">,</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()),</span><span class="w"> </span><span class="s2">".csv"</span><span class="p">))</span><span class="w">
</span><span class="n">write_csv</span><span class="p">(</span><span class="n">ChinaStat</span><span class="p">,</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"data/ChinaStat_dxy_"</span><span class="p">,</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"[ :]"</span><span class="p">,</span><span class="w"> </span><span class="s2">"_"</span><span class="p">,</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()),</span><span class="w"> </span><span class="s2">".csv"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in is.data.frame(x): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">write_csv</span><span class="p">(</span><span class="n">IntStat</span><span class="p">,</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"data/IntStat_dxy_"</span><span class="p">,</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"[ :]"</span><span class="p">,</span><span class="w"> </span><span class="s2">"_"</span><span class="p">,</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()),</span><span class="w"> </span><span class="s2">".csv"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in is.data.frame(x): object 'IntStat' not found
</code></pre></div></div> <p>Epidemic report for China</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">knitr</span><span class="p">)</span><span class="w">
</span><span class="n">kable</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">ChinaStat</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in head(ChinaStat): object 'ChinaStat' not found
</code></pre></div></div> <p>Epidemic report for outside of China</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">kable</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">IntStat</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in head(IntStat): object 'IntStat' not found
</code></pre></div></div> <h2 id="epidemic-map-by-leaflet">Epidemic map by <code class="language-plaintext highlighter-rouge">leaflet</code></h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">leaflet</span><span class="p">)</span><span class="w">
</span><span class="c1">##devtools::install_github("lchiffon/leafletCN")</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">leafletCN</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">RColorBrewer</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">htmltools</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">htmlwidgets</span><span class="p">)</span><span class="w">
</span><span class="n">pn</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"data/province_name.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Parsed with column specification:
## cols(
##   provinceName = col_character(),
##   province = col_character()
## )
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ChinaStat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChinaStat</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">left_join</span><span class="p">(</span><span class="n">pn</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"provinceName"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(lhs, parent, parent): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">leafletGeo</span><span class="p">(</span><span class="s2">"china"</span><span class="p">,</span><span class="w"> </span><span class="n">ChinaStat</span><span class="p">,</span><span class="w"> </span><span class="n">namevar</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">provinceName</span><span class="p">,</span><span class="w"> </span><span class="n">valuevar</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">confirmedCount</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in leafletGeo("china", ChinaStat, namevar = ~provinceName, valuevar = ~confirmedCount): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceName</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceName</span><span class="o">==</span><span class="nf">c</span><span class="p">(</span><span class="s2">"香港"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"香港特别行政区"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in ChinaStat$provinceName[ChinaStat$provinceName == c("香港")] &lt;- c("香港特别行政区"): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceName</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceName</span><span class="o">==</span><span class="nf">c</span><span class="p">(</span><span class="s2">"澳门"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"澳门特别行政区"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in ChinaStat$provinceName[ChinaStat$provinceName == c("澳门")] &lt;- c("澳门特别行政区"): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceName</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceName</span><span class="o">==</span><span class="nf">c</span><span class="p">(</span><span class="s2">"台湾"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"台湾省"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in ChinaStat$provinceName[ChinaStat$provinceName == c("台湾")] &lt;- c("台湾省"): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map</span><span class="o">@</span><span class="n">data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map</span><span class="o">@</span><span class="n">data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">left_join</span><span class="p">(</span><span class="n">ChinaStat</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"name"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"provinceName"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(lhs, parent, parent): object 'map' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bins</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">20</span><span class="p">,</span><span class="w"> </span><span class="m">50</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">,</span><span class="w"> </span><span class="m">200</span><span class="p">,</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="kc">Inf</span><span class="p">)</span><span class="w">
</span><span class="n">pal</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">colorBin</span><span class="p">(</span><span class="s2">"YlOrRd"</span><span class="p">,</span><span class="w"> </span><span class="n">domain</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">map</span><span class="o">$</span><span class="n">value</span><span class="p">,</span><span class="w"> </span><span class="n">bins</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">bins</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in colorBin("YlOrRd", domain = map$value, bins = bins): object 'map' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">labs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapply</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="n">h</span><span class="p">){</span><span class="w">
    </span><span class="n">HTML</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"confirmedCount: "</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"curedCount: "</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"deadCount: "</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"updated: "</span><span class="p">,</span><span class="w"> </span><span class="n">as.POSIXct</span><span class="p">(</span><span class="n">h</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="n">origin</span><span class="o">=</span><span class="s2">"1970-01-01"</span><span class="p">)))</span><span class="w">
</span><span class="p">},</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="n">map</span><span class="o">$</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="s2">"("</span><span class="p">,</span><span class="w"> </span><span class="n">map</span><span class="o">$</span><span class="n">province</span><span class="p">,</span><span class="w"> </span><span class="s2">")"</span><span class="p">),</span><span class="w">
</span><span class="n">map</span><span class="o">$</span><span class="n">confirmedCount</span><span class="p">,</span><span class="w"> </span><span class="n">map</span><span class="o">$</span><span class="n">curedCount</span><span class="p">,</span><span class="w"> </span><span class="n">map</span><span class="o">$</span><span class="n">deadCount</span><span class="p">,</span><span class="w"> </span><span class="n">map</span><span class="o">$</span><span class="n">modifyTime</span><span class="p">,</span><span class="w">
</span><span class="n">SIMPLIFY</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">USE.NAMES</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="c1">## must no name</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in paste0(map$name, "(", map$province, ")"): object 'map' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ll</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">leaflet</span><span class="p">(</span><span class="n">map</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">addTiles</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">addPolygons</span><span class="p">(</span><span class="n">stroke</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w">
                </span><span class="n">smoothFactor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                </span><span class="n">fillOpacity</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.7</span><span class="p">,</span><span class="w">
                </span><span class="n">weight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                </span><span class="n">fillColor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">pal</span><span class="p">(</span><span class="n">value</span><span class="p">),</span><span class="w">
                </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"white"</span><span class="p">,</span><span class="w">
                </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">labs</span><span class="w">
                </span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">    
    </span><span class="n">addLegend</span><span class="p">(</span><span class="s2">"bottomright"</span><span class="p">,</span><span class="w"> </span><span class="n">pal</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal</span><span class="p">,</span><span class="w"> </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">value</span><span class="p">,</span><span class="w">
              </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"confirmedCount"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">addTitle</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"2019-nCoV&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Confirmed Count:"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">confirmedCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Suspected Count"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">suspectedCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Cured Count:"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">curedCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Dead Count:"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">deadCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Updated:"</span><span class="p">,</span><span class="w"> </span><span class="n">as.POSIXct</span><span class="p">(</span><span class="n">SumStat</span><span class="o">$</span><span class="n">modifyTime</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w">
                                               </span><span class="n">origin</span><span class="o">=</span><span class="s2">"1970-01-01"</span><span class="p">)</span><span class="w">
                  </span><span class="p">),</span><span class="w"> </span><span class="n">fontSize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"12px"</span><span class="p">,</span><span class="w">
             </span><span class="n">leftPosition</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">80</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in structure(list(options = options), leafletData = data): object 'map' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">saveWidget</span><span class="p">(</span><span class="n">ll</span><span class="p">,</span><span class="w"> </span><span class="s2">"nCoV2019.html"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in resolveSizing(x, x$sizingPolicy, standalone = standalone, knitrOptions = knitrOptions): object 'll' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">file.rename</span><span class="p">(</span><span class="s2">"nCoV2019.html"</span><span class="p">,</span><span class="w"> </span><span class="s2">"widgets/nCoV2019.html"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning in file.rename("nCoV2019.html", "widgets/nCoV2019.html"): cannot
## rename file 'nCoV2019.html' to 'widgets/nCoV2019.html', reason 'No such file or
## directory'
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] FALSE
</code></pre></div></div> <iframeComp ihtml="/widgets/nCoV2019.html"></iframeComp> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cmap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">leafletGeo</span><span class="p">(</span><span class="s2">"city"</span><span class="p">)</span><span class="w">
</span><span class="n">AS</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">AreaStat</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="n">provinceName</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"北京市"</span><span class="p">,</span><span class="w"> </span><span class="s2">"上海市"</span><span class="p">,</span><span class="w"> </span><span class="s2">"天津市"</span><span class="p">,</span><span class="w"> </span><span class="s2">"重庆市"</span><span class="p">,</span><span class="w"> </span><span class="s2">"香港"</span><span class="p">,</span><span class="w"> </span><span class="s2">"台湾"</span><span class="p">,</span><span class="w"> </span><span class="s2">"澳门"</span><span class="p">))</span><span class="w">
</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"神农架林区"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"神农架"</span><span class="w">
</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"恩施州"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"恩施"</span><span class="w">
</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"湘西自治州"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"湘西"</span><span class="w">
</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"黔南州"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"黔南"</span><span class="w">
</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"黔东南州"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"黔东南"</span><span class="w">
</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">AS</span><span class="o">$</span><span class="n">cityName</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"黔西南州"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"黔西南"</span><span class="w">

</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">left_join</span><span class="p">(</span><span class="n">na.omit</span><span class="p">(</span><span class="n">AS</span><span class="p">),</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"name"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"cityName"</span><span class="p">))</span><span class="w">
</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span><span class="n">idx1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">match</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"confirmedCount"</span><span class="p">,</span><span class="w"> </span><span class="s2">"suspectedCount"</span><span class="p">,</span><span class="w"> </span><span class="s2">"curedCount"</span><span class="p">,</span><span class="w"> </span><span class="s2">"deadCount"</span><span class="p">),</span><span class="w"> </span><span class="n">colnames</span><span class="p">(</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">))</span><span class="w">
</span><span class="n">idx2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">match</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"confirmedCount"</span><span class="p">,</span><span class="w"> </span><span class="s2">"suspectedCount"</span><span class="p">,</span><span class="w"> </span><span class="s2">"curedCount"</span><span class="p">,</span><span class="w"> </span><span class="s2">"deadCount"</span><span class="p">),</span><span class="w"> </span><span class="n">colnames</span><span class="p">(</span><span class="n">ChinaStat</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in is.data.frame(x): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">[</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="o">$</span><span class="n">name</span><span class="o">==</span><span class="s2">"北京"</span><span class="p">,</span><span class="w"> </span><span class="n">idx1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChinaStat</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceShortName</span><span class="o">==</span><span class="s2">"北京"</span><span class="p">,</span><span class="w"> </span><span class="n">idx2</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(expr, envir, enclos): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">[</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="o">$</span><span class="n">name</span><span class="o">==</span><span class="s2">"上海"</span><span class="p">,</span><span class="w"> </span><span class="n">idx1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChinaStat</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceShortName</span><span class="o">==</span><span class="s2">"上海"</span><span class="p">,</span><span class="w"> </span><span class="n">idx2</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(expr, envir, enclos): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">[</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="o">$</span><span class="n">name</span><span class="o">==</span><span class="s2">"天津"</span><span class="p">,</span><span class="w"> </span><span class="n">idx1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChinaStat</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceShortName</span><span class="o">==</span><span class="s2">"天津"</span><span class="p">,</span><span class="w"> </span><span class="n">idx2</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(expr, envir, enclos): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">[</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="o">$</span><span class="n">name</span><span class="o">==</span><span class="s2">"重庆"</span><span class="p">,</span><span class="w"> </span><span class="n">idx1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChinaStat</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceShortName</span><span class="o">==</span><span class="s2">"重庆"</span><span class="p">,</span><span class="w"> </span><span class="n">idx2</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(expr, envir, enclos): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">[</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="o">$</span><span class="n">name</span><span class="o">==</span><span class="s2">"香港"</span><span class="p">,</span><span class="w"> </span><span class="n">idx1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChinaStat</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceShortName</span><span class="o">==</span><span class="s2">"香港"</span><span class="p">,</span><span class="w"> </span><span class="n">idx2</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(expr, envir, enclos): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="p">[</span><span class="n">cmap</span><span class="o">@</span><span class="n">data</span><span class="o">$</span><span class="n">name</span><span class="o">==</span><span class="s2">"澳门"</span><span class="p">,</span><span class="w"> </span><span class="n">idx1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChinaStat</span><span class="p">[</span><span class="n">ChinaStat</span><span class="o">$</span><span class="n">provinceShortName</span><span class="o">==</span><span class="s2">"澳门"</span><span class="p">,</span><span class="w"> </span><span class="n">idx2</span><span class="p">]</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in eval(expr, envir, enclos): object 'ChinaStat' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">clabs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapply</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="n">h</span><span class="p">){</span><span class="w">
    </span><span class="n">HTML</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"confirmedCount: "</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"curedCount: "</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"deadCount: "</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">))</span><span class="w">
</span><span class="p">},</span><span class="w"> </span><span class="n">cmap</span><span class="o">$</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">cmap</span><span class="o">$</span><span class="n">confirmedCount</span><span class="p">,</span><span class="w"> </span><span class="n">cmap</span><span class="o">$</span><span class="n">curedCount</span><span class="p">,</span><span class="w"> </span><span class="n">cmap</span><span class="o">$</span><span class="n">deadCount</span><span class="p">,</span><span class="w">
</span><span class="n">SIMPLIFY</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">USE.NAMES</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="c1">## must no name</span><span class="w">

</span><span class="n">llc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">leaflet</span><span class="p">(</span><span class="n">cmap</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">addTiles</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">addPolygons</span><span class="p">(</span><span class="n">stroke</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w">
                </span><span class="n">smoothFactor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                </span><span class="n">fillOpacity</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.7</span><span class="p">,</span><span class="w">
                </span><span class="n">weight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                </span><span class="n">fillColor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">pal</span><span class="p">(</span><span class="n">confirmedCount</span><span class="p">),</span><span class="w">
                </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"white"</span><span class="p">,</span><span class="w">
                </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">clabs</span><span class="w">
                </span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">    
    </span><span class="n">addLegend</span><span class="p">(</span><span class="s2">"bottomright"</span><span class="p">,</span><span class="w"> </span><span class="n">pal</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal</span><span class="p">,</span><span class="w"> </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">confirmedCount</span><span class="p">,</span><span class="w">
              </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"confirmedCount"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">addTitle</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"2019-nCoV (mainland cities)&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Confirmed Count:"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">confirmedCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Suspected Count"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">suspectedCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Cured Count:"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">curedCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"Dead Count:"</span><span class="p">,</span><span class="w"> </span><span class="n">SumStat</span><span class="o">$</span><span class="n">deadCount</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt;br&gt;"</span><span class="p">),</span><span class="w">
             </span><span class="n">fontSize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"12px"</span><span class="p">,</span><span class="w">
             </span><span class="n">leftPosition</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">80</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in pal(confirmedCount): could not find function "pal"
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">saveWidget</span><span class="p">(</span><span class="n">llc</span><span class="p">,</span><span class="w"> </span><span class="s2">"nCoV2019_cities.html"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in resolveSizing(x, x$sizingPolicy, standalone = standalone, knitrOptions = knitrOptions): object 'llc' not found
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">file.rename</span><span class="p">(</span><span class="s2">"nCoV2019_cities.html"</span><span class="p">,</span><span class="w"> </span><span class="s2">"widgets/nCoV2019_cities.html"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning in file.rename("nCoV2019_cities.html", "widgets/nCoV2019_cities.html"):
## cannot rename file 'nCoV2019_cities.html' to 'widgets/nCoV2019_cities.html',
## reason 'No such file or directory'
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] FALSE
</code></pre></div></div> <iframeComp ihtml="/widgets/nCoV2019_cities.html"></iframeComp> <p><strong>More links:</strong></p> <p>More detailed maps from Johns Hopkins: <a href="https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6">https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6</a></p> <p>WHO situation reports: <a href="https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports/">https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports/</a></p> <p>github wuhan2020 project: <a href="https://github.com/wuhan2020/wuhan2020">https://github.com/wuhan2020/wuhan2020</a></p>]]></content><author><name></name></author><category term="rstats"/><summary type="html"><![CDATA[2019-nCoV Take Home:]]></summary></entry><entry><title type="html">Virtual Environment R Development</title><link href="https://hubentu.github.io/blog/2020/virtual-environment-R-development/" rel="alternate" type="text/html" title="Virtual Environment R Development"/><published>2020-01-07T00:00:00+00:00</published><updated>2020-01-07T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2020/virtual-environment-R-development</id><content type="html" xml:base="https://hubentu.github.io/blog/2020/virtual-environment-R-development/"><![CDATA[<h1 id="virtual-environment-for-r-development-by-conda">Virtual environment for R development by conda</h1> <p>Sometimes we need mutliple versions of R for different development (R-devel) and data analysis (R-release) purposes. Here is one of the solutions by python package manager conda. We can maintain mutliple versions of R and specific packages in different conda environments.</p> <h2 id="for-released-versions">For released versions</h2> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda config <span class="nt">--add</span> channels conda-forge
conda create <span class="nt">-n</span> r-3.6
conda activate r-3.6
conda search r-base
conda <span class="nb">install </span>r-base<span class="o">=</span>3.6.2
</code></pre></div></div> <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Rscript <span class="nt">-e</span> <span class="s2">"R.version.string"</span>
<span class="c">## [1] "R version 3.6.2 (2019-12-12)"</span>
conda deactivate
</code></pre></div></div> <h2 id="for-development-version-r-400">For development version (R-4.0.0)</h2> <ul> <li>Prepare recipe for R-4.0.0 <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/hubentu/conda-r-devel.git
<span class="nb">cd </span>conda-r-devel
conda create <span class="nt">-n</span> r-devel
conda activate r-devel
</code></pre></div> </div> </li> <li>Build and install from source <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda <span class="nb">install </span>conda-build
conda build <span class="nb">.</span>
conda <span class="nb">install</span> <span class="nt">--use-local</span> path/to/r-devel-gz
</code></pre></div> </div> </li> </ul> <p>Or just install the compiled version.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda install --use-local r-devel-4.0.0-0.tar.bz2
conda install readline
</code></pre></div></div> <ul> <li>Test <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Rscript <span class="nt">-e</span> <span class="s2">"R.version.string"</span>
<span class="c">## [1] "R Under development (unstable) (2020-01-07 r77631)"</span>
</code></pre></div> </div> </li> </ul> <p>Via conda environments, we can switch different version of R by <code class="language-plaintext highlighter-rouge">conda activate renv</code>.</p>]]></content><author><name></name></author><category term="rstats"/><summary type="html"><![CDATA[Virtual environment for R development by conda]]></summary></entry><entry><title type="html">Happy Holiday Gpt2 In R</title><link href="https://hubentu.github.io/blog/2019/happy-holiday-gpt2-in-R/" rel="alternate" type="text/html" title="Happy Holiday Gpt2 In R"/><published>2019-12-26T00:00:00+00:00</published><updated>2019-12-26T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2019/happy-holiday-gpt2-in-R</id><content type="html" xml:base="https://hubentu.github.io/blog/2019/happy-holiday-gpt2-in-R/"><![CDATA[<h1 id="happy-holiday-from-gtp-2-in-r">Happy holiday from GTP-2 in R</h1> <p><a href="https://openai.com/blog/better-language-models/">GTP-2</a> is the state-of-the-art language model from OpenAI.</p> <h2 id="installation">Installation</h2> <p>Here we test the <a href="https://github.com/r-tensorflow/gpt2"><code class="language-plaintext highlighter-rouge">gpt2</code></a> package from rstudio.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"r-tensorflow/gpt2"</span><span class="p">)</span><span class="w">
</span><span class="n">gpt2</span><span class="o">::</span><span class="n">install_gpt2</span><span class="p">(</span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"conda"</span><span class="p">,</span><span class="w"> </span><span class="n">envname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"r-gpt2"</span><span class="p">)</span><span class="w">
</span><span class="n">reticulate</span><span class="o">::</span><span class="n">use_condaenv</span><span class="p">(</span><span class="n">required</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">condaenv</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"r-gpt2"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">gpt2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <h2 id="text-generation">Text generation</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">txt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gpt2</span><span class="p">(</span><span class="n">prompt</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Iron Man: Happy holiday, Jarvis!"</span><span class="p">,</span><span class="w">
            </span><span class="n">model</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"355M"</span><span class="p">,</span><span class="w">
            </span><span class="n">total_tokens</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100</span><span class="p">,</span><span class="w">
            </span><span class="n">top_k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">txt</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## 
## 
## Jarvis: I'm sorry, I'm just so excited to be here.
## 
## Tony Stark: I'm sure you're excited to be here.
## 
## Jarvis: I'm not.
## 
## Tony Stark: I'm sure you're excited to be here.
## 
## Jarvis: I'm not.
## 
## Tony Stark: I'm sure you're excited to be here.
## 
## Jarvis: I'm not.
## 
## Tony Stark: I'm sure you're
</code></pre></div></div> <h2 id="reference">Reference</h2> <p>https://blogs.rstudio.com/tensorflow/posts/2019-10-23-gpt-2/</p>]]></content><author><name></name></author><category term="deeplearning"/><category term="rstats"/><summary type="html"><![CDATA[Happy holiday from GTP-2 in R GTP-2 is the state-of-the-art language model from OpenAI.]]></summary></entry><entry><title type="html">Tidytuesday Christmas Songs Wordcloud</title><link href="https://hubentu.github.io/blog/2019/TidyTuesday-christmas-songs-wordcloud/" rel="alternate" type="text/html" title="Tidytuesday Christmas Songs Wordcloud"/><published>2019-12-24T00:00:00+00:00</published><updated>2019-12-24T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2019/TidyTuesday-christmas-songs-wordcloud</id><content type="html" xml:base="https://hubentu.github.io/blog/2019/TidyTuesday-christmas-songs-wordcloud/"><![CDATA[<h1 id="tidytuesday-wordcloud-for-christmas-music-billboards">TidyTuesday: WordCloud for Christmas Music Billboards</h1> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidytext</span><span class="p">)</span><span class="w">
</span><span class="n">data</span><span class="p">(</span><span class="n">stop_words</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">wordcloud2</span><span class="p">)</span><span class="w">

</span><span class="n">tuesdata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tidytuesdayR</span><span class="o">::</span><span class="n">tt_load</span><span class="p">(</span><span class="s2">"2019-12-24"</span><span class="p">)</span><span class="w">
</span><span class="n">lyrics</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tuesdata</span><span class="o">$</span><span class="n">christmas_lyrics</span><span class="w">
</span></code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lyc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lyrics</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">lyric</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">anti_join</span><span class="p">(</span><span class="n">stop_words</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">sort</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Joining, by = "word"
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wordcloud2</span><span class="p">(</span><span class="n">lyc</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <iframeComp ihtml="/widgets/Christmas_song_wordcloud.html"></iframeComp>]]></content><author><name></name></author><category term="tidytuesday"/><category term="rstats"/><summary type="html"><![CDATA[TidyTuesday: WordCloud for Christmas Music Billboards]]></summary></entry><entry><title type="html">R Flowchart</title><link href="https://hubentu.github.io/blog/2019/R-flowchart/" rel="alternate" type="text/html" title="R Flowchart"/><published>2019-12-20T00:00:00+00:00</published><updated>2019-12-20T00:00:00+00:00</updated><id>https://hubentu.github.io/blog/2019/R-flowchart</id><content type="html" xml:base="https://hubentu.github.io/blog/2019/R-flowchart/"><![CDATA[<h1 id="packages-to-draw-flowchart-christmas-tree-in-r">Packages to draw flowchart (christmas tree) in R</h1> <h2 id="graphviz"><a href="https://rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html">Graphviz</a></h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">DiagrammeR</span><span class="p">)</span><span class="w">
</span><span class="n">f1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">grViz</span><span class="p">(</span><span class="s2">"
digraph xmas {
  # graph satement
  graph [overlap = true, fontsize = 10]

  # node statement
  node [shape = triangle, style = filled, fillcolor = darkgreen]
  B; C; D; E; F; G
  A [shape = star, fillcolor = gold, fontsize = 5]
  H [shape = box, fillcolor = brown]

  # edge
  edge [arrowhead = dot, color = gold]
  A -&gt; B
  B -&gt; {C D}
  C -&gt; {E F}
  D -&gt; {F G}
  F -&gt; H
}
"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <iframeComp ihtml="/widgets/xmas_grViz.html"></iframeComp> <h2 id="mermaid"><a href="https://rich-iannone.github.io/DiagrammeR/graphviz_and_mermaid.html">mermaid</a></h2> <p>Could anyone tell me how to use star/triangle, change font size, define class?</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">f2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mermaid</span><span class="p">(</span><span class="s2">"
graph TB
  A((A)) --&gt; B{B}
  B{B} --&gt; |O|C{C}
  B{B} --&gt; |O|D{D}
  C{C} --&gt; |O|E{E}
  C{C} --&gt; |O|F{F}
  D{D} --&gt; |O|F{F}
  D{D} --&gt; |O|G{G}
  F{F} --- H[H]

  style A fill:gold
  style H fill:brown
  style B fill:green
  style C fill:green
  style D fill:green
  style E fill:green
  style F fill:green
  style G fill:green
"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <iframeComp ihtml="/widgets/xmas_mermaid.html"></iframeComp> <h2 id="visnetwork"><a href="https://datastorm-open.github.io/visNetwork/">visNetwork</a></h2> <p>Most R-friendly way to draw a flowchart.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">visNetwork</span><span class="p">)</span><span class="w">
</span><span class="n">nodes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">LETTERS</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">8</span><span class="p">],</span><span class="w">
                    </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">LETTERS</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">8</span><span class="p">],</span><span class="w">
                    </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"gold"</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"darkgreen"</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">),</span><span class="w"> </span><span class="s2">"brown"</span><span class="p">),</span><span class="w">
                    </span><span class="n">shape</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"star"</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"triangle"</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">),</span><span class="w"> </span><span class="s2">"box"</span><span class="p">))</span><span class="w">
</span><span class="n">edges</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">from</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"A"</span><span class="p">,</span><span class="w"> </span><span class="s2">"B"</span><span class="p">,</span><span class="w"> </span><span class="s2">"B"</span><span class="p">,</span><span class="w"> </span><span class="s2">"C"</span><span class="p">,</span><span class="w"> </span><span class="s2">"C"</span><span class="p">,</span><span class="w"> </span><span class="s2">"D"</span><span class="p">,</span><span class="w"> </span><span class="s2">"D"</span><span class="p">,</span><span class="w"> </span><span class="s2">"F"</span><span class="p">,</span><span class="w"> </span><span class="s2">"E"</span><span class="p">,</span><span class="w"> </span><span class="s2">"G"</span><span class="p">),</span><span class="w">
                    </span><span class="n">to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"B"</span><span class="p">,</span><span class="w"> </span><span class="s2">"C"</span><span class="p">,</span><span class="w"> </span><span class="s2">"D"</span><span class="p">,</span><span class="w"> </span><span class="s2">"E"</span><span class="p">,</span><span class="w"> </span><span class="s2">"F"</span><span class="p">,</span><span class="w"> </span><span class="s2">"F"</span><span class="p">,</span><span class="w"> </span><span class="s2">"G"</span><span class="p">,</span><span class="w"> </span><span class="s2">"H"</span><span class="p">,</span><span class="w"> </span><span class="s2">"F"</span><span class="p">,</span><span class="w"> </span><span class="s2">"F"</span><span class="p">))</span><span class="w">
</span><span class="n">f3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">visNetwork</span><span class="p">(</span><span class="n">nodes</span><span class="p">,</span><span class="w"> </span><span class="n">edges</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">visLayout</span><span class="p">(</span><span class="m">7</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <iframeComp ihtml="/widgets/xmas_vis.html"></iframeComp>]]></content><author><name></name></author><category term="rstats"/><category term="flowchart"/><summary type="html"><![CDATA[Packages to draw flowchart (christmas tree) in R Graphviz]]></summary></entry></feed>